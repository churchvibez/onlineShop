{"ast":null,"code":"var _jsxFileName = \"C:\\\\Uni\\\\Year 3\\\\Semester 2\\\\Human-machine interfaces\\\\shop\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        user: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        user: null\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthContextProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, {\n    user: null\n  });\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem(\"user\"));\n    if (storedUser) {\n      const fetchUserRole = async () => {\n        try {\n          const response = await fetch(`http://localhost:1337/getUserRole/${storedUser.username}`);\n          if (response.ok) {\n            const {\n              role\n            } = await response.json();\n            dispatch({\n              type: 'LOGIN',\n              payload: {\n                ...storedUser,\n                role\n              }\n            });\n          }\n        } catch (error) {\n          console.error(\"Error fetching user role:\", error);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n      fetchUserRole();\n    } else {\n      setIsLoading(false);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      ...state,\n      isLoading,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthContextProvider, \"yg6z467aNn0o8qvnmirkcyMFtrg=\");\n_c = AuthContextProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["createContext","useReducer","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","authReducer","state","action","type","user","payload","AuthContextProvider","children","_s","dispatch","isLoading","setIsLoading","storedUser","JSON","parse","localStorage","getItem","fetchUserRole","response","fetch","username","ok","role","json","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Uni/Year 3/Semester 2/Human-machine interfaces/shop/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useReducer, useEffect, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const authReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'LOGIN':\r\n            return { user: action.payload };\r\n        case 'LOGOUT':\r\n            return { user: null };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const AuthContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(authReducer, { user: null });\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const storedUser = JSON.parse(localStorage.getItem(\"user\"));\r\n        if (storedUser) {\r\n            const fetchUserRole = async () => {\r\n                try {\r\n                    const response = await fetch(`http://localhost:1337/getUserRole/${storedUser.username}`);\r\n                    if (response.ok) {\r\n                        const { role } = await response.json();\r\n                        dispatch({ type: 'LOGIN', payload: { ...storedUser, role } });\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Error fetching user role:\", error);\r\n                } finally {\r\n                    setIsLoading(false);\r\n                }\r\n            };\r\n            fetchUserRole();\r\n        } else {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ ...state, isLoading, dispatch }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMO,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,OAAO;MACR,OAAO;QAAEC,IAAI,EAAEF,MAAM,CAACG;MAAQ,CAAC;IACnC,KAAK,QAAQ;MACT,OAAO;QAAED,IAAI,EAAE;MAAK,CAAC;IACzB;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;AAED,OAAO,MAAMK,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACjD,MAAM,CAACP,KAAK,EAAEQ,QAAQ,CAAC,GAAGf,UAAU,CAACM,WAAW,EAAE;IAAEI,IAAI,EAAE;EAAK,CAAC,CAAC;EACjE,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMiB,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;IAC3D,IAAIJ,UAAU,EAAE;MACZ,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;QAC9B,IAAI;UACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCP,UAAU,CAACQ,QAAS,EAAC,CAAC;UACxF,IAAIF,QAAQ,CAACG,EAAE,EAAE;YACb,MAAM;cAAEC;YAAK,CAAC,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;YACtCd,QAAQ,CAAC;cAAEN,IAAI,EAAE,OAAO;cAAEE,OAAO,EAAE;gBAAE,GAAGO,UAAU;gBAAEU;cAAK;YAAE,CAAC,CAAC;UACjE;QACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACrD,CAAC,SAAS;UACNb,YAAY,CAAC,KAAK,CAAC;QACvB;MACJ,CAAC;MACDM,aAAa,CAAC,CAAC;IACnB,CAAC,MAAM;MACHN,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIb,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAG1B,KAAK;MAAES,SAAS;MAAED;IAAS,CAAE;IAAAF,QAAA,EAC1DA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvB,EAAA,CA/BWF,mBAAmB;AAAA0B,EAAA,GAAnB1B,mBAAmB;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Uni\\\\Year 3\\\\Semester 2\\\\Human-machine interfaces\\\\shop\\\\frontend\\\\src\\\\components\\\\Navbar.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { useLogout } from \"../hooks/useLogout\";\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  const {\n    logout\n  } = useLogout();\n  const {\n    user,\n    isLoading\n  } = useAuthContext();\n  const [isRoleFetched, setIsRoleFetched] = useState(false);\n  useEffect(() => {\n    if (user && user.role) {\n      setIsRoleFetched(true);\n    }\n  }, [user]);\n  const handleClick = () => {\n    logout();\n  };\n\n  // Render loading indicator while loading user data\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Render nothing if user data is not loaded yet\n  if (!user || !isRoleFetched) {\n    return null;\n  }\n\n  // Render Navbar with user data once everything is loaded\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Hello \", user.username, \", your role is \", user.role]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClick,\n            children: \"Log Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Navbar, \"X4Mk1Nx78e5mUpM1mIgL9jiujvU=\", false, function () {\n  return [useLogout, useAuthContext];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Link","useState","useEffect","useLogout","useAuthContext","jsxDEV","_jsxDEV","Navbar","_s","logout","user","isLoading","isRoleFetched","setIsRoleFetched","role","handleClick","children","fileName","_jsxFileName","lineNumber","columnNumber","className","username","onClick","_c","$RefreshReg$"],"sources":["C:/Uni/Year 3/Semester 2/Human-machine interfaces/shop/frontend/src/components/Navbar.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLogout } from \"../hooks/useLogout\";\r\nimport { useAuthContext } from \"../hooks/useAuthContext\";\r\n\r\nconst Navbar = () => {\r\n    const { logout } = useLogout();\r\n    const { user, isLoading } = useAuthContext();\r\n    const [isRoleFetched, setIsRoleFetched] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (user && user.role) {\r\n            setIsRoleFetched(true);\r\n        }\r\n    }, [user]);\r\n\r\n    const handleClick = () => {\r\n        logout();\r\n    };\r\n\r\n    // Render loading indicator while loading user data\r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    // Render nothing if user data is not loaded yet\r\n    if (!user || !isRoleFetched) {\r\n        return null;\r\n    }\r\n\r\n    // Render Navbar with user data once everything is loaded\r\n    return (\r\n        <header>\r\n            <div className=\"container\">\r\n                <nav>\r\n                    <div>\r\n                        <span>Hello {user.username}, your role is {user.role}</span>\r\n                        <button onClick={handleClick}>Log Out</button>\r\n                    </div>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,cAAc,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9B,MAAM;IAAEO,IAAI;IAAEC;EAAU,CAAC,GAAGP,cAAc,CAAC,CAAC;EAC5C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzDC,SAAS,CAAC,MAAM;IACZ,IAAIQ,IAAI,IAAIA,IAAI,CAACI,IAAI,EAAE;MACnBD,gBAAgB,CAAC,IAAI,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACH,IAAI,CAAC,CAAC;EAEV,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACtBN,MAAM,CAAC,CAAC;EACZ,CAAC;;EAED;EACA,IAAIE,SAAS,EAAE;IACX,oBAAOL,OAAA;MAAAU,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;;EAEA;EACA,IAAI,CAACV,IAAI,IAAI,CAACE,aAAa,EAAE;IACzB,OAAO,IAAI;EACf;;EAEA;EACA,oBACIN,OAAA;IAAAU,QAAA,eACIV,OAAA;MAAKe,SAAS,EAAC,WAAW;MAAAL,QAAA,eACtBV,OAAA;QAAAU,QAAA,eACIV,OAAA;UAAAU,QAAA,gBACIV,OAAA;YAAAU,QAAA,GAAM,QAAM,EAACN,IAAI,CAACY,QAAQ,EAAC,iBAAe,EAACZ,IAAI,CAACI,IAAI;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC5Dd,OAAA;YAAQiB,OAAO,EAAER,WAAY;YAAAC,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEjB,CAAC;AAACZ,EAAA,CAtCID,MAAM;EAAA,QACWJ,SAAS,EACAC,cAAc;AAAA;AAAAoB,EAAA,GAFxCjB,MAAM;AAwCZ,eAAeA,MAAM;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
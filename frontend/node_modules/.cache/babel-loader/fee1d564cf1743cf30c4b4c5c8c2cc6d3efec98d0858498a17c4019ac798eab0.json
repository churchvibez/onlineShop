{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { AuthContext } from \"../context/AuthContext\";\nimport { useAuthContext } from \"./useAuthContext\";\nexport const useLogin = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(null);\n  const {\n    dispatch\n  } = useAuthContext();\n  const login = async (username, password) => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://localhost:1337/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        const json = await response.json();\n        setError(json.error);\n      } else {\n        const json = await response.json();\n        // Fetch user role\n        const roleResponse = await fetch(`http://localhost:1337/prod/getUserRole/${username}`);\n        if (roleResponse.ok) {\n          const {\n            role\n          } = await roleResponse.json();\n          localStorage.setItem('user', JSON.stringify({\n            ...json,\n            role\n          }));\n          dispatch({\n            type: 'LOGIN',\n            payload: {\n              ...json,\n              role\n            }\n          });\n        } else {\n          setError(\"Error fetching user role\");\n        }\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      setError(\"Error occurred during login\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return {\n    login,\n    isLoading,\n    error\n  };\n};\n_s(useLogin, \"2o2oUdrJP220M1JG8l7hQABh7Ks=\", false, function () {\n  return [useAuthContext];\n});","map":{"version":3,"names":["useState","AuthContext","useAuthContext","useLogin","_s","error","setError","isLoading","setIsLoading","dispatch","login","username","password","response","fetch","method","headers","body","JSON","stringify","ok","json","roleResponse","role","localStorage","setItem","type","payload","console"],"sources":["C:/Uni/Year 3/Semester 2/Human-machine interfaces/shop/frontend/src/hooks/useLogin.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useAuthContext } from \"./useAuthContext\";\r\n\r\nexport const useLogin = () => {\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(null);\r\n    const { dispatch } = useAuthContext();\r\n\r\n    const login = async (username, password) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n\r\n        try {\r\n            const response = await fetch('http://localhost:1337/login', {\r\n                method: 'POST',\r\n                headers: {'Content-Type': 'application/json'},\r\n                body: JSON.stringify({username, password})\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const json = await response.json();\r\n                setError(json.error);\r\n            } else {\r\n                const json = await response.json();\r\n                // Fetch user role\r\n                const roleResponse = await fetch(`http://localhost:1337/prod/getUserRole/${username}`);\r\n                if (roleResponse.ok) {\r\n                    const { role } = await roleResponse.json();\r\n                    localStorage.setItem('user', JSON.stringify({ ...json, role }));\r\n                    dispatch({ type: 'LOGIN', payload: { ...json, role } });\r\n                } else {\r\n                    setError(\"Error fetching user role\");\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Login error:\", error);\r\n            setError(\"Error occurred during login\");\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    };\r\n\r\n    return { login, isLoading, error };\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,wBAAwB;AACpD,SAASC,cAAc,QAAQ,kBAAkB;AAEjD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM;IAAES;EAAS,CAAC,GAAGP,cAAc,CAAC,CAAC;EAErC,MAAMQ,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACxCJ,YAAY,CAAC,IAAI,CAAC;IAClBF,QAAQ,CAAC,IAAI,CAAC;IAEd,IAAI;MACA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QACxDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAACR,QAAQ;UAAEC;QAAQ,CAAC;MAC7C,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;QACd,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCf,QAAQ,CAACe,IAAI,CAAChB,KAAK,CAAC;MACxB,CAAC,MAAM;QACH,MAAMgB,IAAI,GAAG,MAAMR,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC;QACA,MAAMC,YAAY,GAAG,MAAMR,KAAK,CAAE,0CAAyCH,QAAS,EAAC,CAAC;QACtF,IAAIW,YAAY,CAACF,EAAE,EAAE;UACjB,MAAM;YAAEG;UAAK,CAAC,GAAG,MAAMD,YAAY,CAACD,IAAI,CAAC,CAAC;UAC1CG,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACC,SAAS,CAAC;YAAE,GAAGE,IAAI;YAAEE;UAAK,CAAC,CAAC,CAAC;UAC/Dd,QAAQ,CAAC;YAAEiB,IAAI,EAAE,OAAO;YAAEC,OAAO,EAAE;cAAE,GAAGN,IAAI;cAAEE;YAAK;UAAE,CAAC,CAAC;QAC3D,CAAC,MAAM;UACHjB,QAAQ,CAAC,0BAA0B,CAAC;QACxC;MACJ;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZuB,OAAO,CAACvB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCC,QAAQ,CAAC,6BAA6B,CAAC;IAC3C,CAAC,SAAS;MACNE,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC;EAED,OAAO;IAAEE,KAAK;IAAEH,SAAS;IAAEF;EAAM,CAAC;AACtC,CAAC;AAACD,EAAA,CAxCWD,QAAQ;EAAA,QAGID,cAAc;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}